language: cpp
os: linux
sudo: required
compiler: gcc
dist: focal

matrix:
  fast_finish: true
  include:
    - name: Ubuntu 20.04 build
      env:
      - DOCKER_FILE=docker/docker_ubuntu2004
      - DOCKER_IMAGE=ubuntu2004_qsv
      - PKG_TYPE=deb

    - name: Fedora 32 build
      env:
      - DOCKER_FILE=docker/docker_fedora32
      - DOCKER_IMAGE=fedora32_qsv
      - PKG_TYPE=rpm

before_install:
  - $CXX --version
  - git clone https://github.com/AviSynth/AviSynthPlus.git ./AviSynthPlus
  - git clone https://github.com/vapoursynth/vapoursynth.git ./vapoursynth
  - cp -f ${DOCKER_FILE} Dockerfile
  - LOCAL_USER_ID=`id -u`
  - LOCAL_GROUP_ID=`id -g`
  - docker image build --build-arg LOCAL_USER_ID=${LOCAL_USER_ID} --build-arg LOCAL_GROUP_ID=${LOCAL_GROUP_ID} -t ${DOCKER_IMAGE} .
  - OUTPUT_DIR=`pwd`/../output
  - mkdir ${OUTPUT_DIR}
  - nproc=`grep 'processor' /proc/cpuinfo | wc -l`

script:
  - docker run -dit --rm -v ${OUTPUT_DIR}:/output --name build_pkg ${DOCKER_IMAGE}
  - docker exec build_pkg ./configure --extra-cxxflags="-I./AviSynthPlus/avs_core/include -I./vapoursynth/include"
  - docker exec build_pkg make -j${nproc}
  - docker exec build_pkg ./qsvencc --version
  - docker exec build_pkg python3 ./check_options.py
  - docker exec build_pkg ./build_${PKG_TYPE}.sh
  - docker exec build_pkg sh -c "cp -v ./*.${PKG_TYPE} /output/"

deploy:
  provider: releases
  api_key: IDRwZWN1uQaTxb64SQnTDNJR5KPtCFPL3Mln9GrdZ7TSiyec/o1KXpOuh/50ZO5A
  file:
    - ${OUTPUT_DIR}/*.${PKG_TYPE}
  skip_cleanup: true
  on:
    branch: release
    tags: true